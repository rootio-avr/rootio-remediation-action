---
name: CI/CD Pipeline

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"  # Triggers when a new version tag (e.g., v1.0.0) is pushed.

jobs:
  validate-action:
    name: Validate GitHub Action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate action.yml
        uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  validate-yaml:
    name: Validate YAML Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yml  # Optional custom linting rules

  test-action:
    name: Test GitHub Action
    runs-on: ubuntu-latest
    needs: [validate-action, validate-yaml]  # Ensures validation passes first

    env:
      ORG_ID: ${{ secrets.ROOTIO_ORG_ID }}
      API_TOKEN: ${{ secrets.ROOTIO_API_TOKEN }}
      REGISTRY_CREDENTIALS_ID: ${{ secrets.ROOTIO_REGISTRY_CREDENTIALS }}
      IMAGE_REFERENCE: ${{ secrets.ROOTIO_IMAGE_REFERENCE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Root.io Remediation Action
        uses: ./
        with:
          org_id: ${{ env.ORG_ID }}
          api_token: ${{ env.API_TOKEN }}
          registry_credentials_id: ${{ env.REGISTRY_CREDENTIALS_ID }}
          image_reference: ${{ env.IMAGE_REFERENCE }}

  release:
    name: Publish to GitHub Marketplace
    runs-on: ubuntu-latest
    needs: [test-action]  # Only runs if tests pass
    if: startsWith(github.ref, 'refs/tags/v')  # Ensures it only runs on new version tags

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes in this release
            - [ ] Add release notes manually or automate them.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Version Tag
        run: |
          git tag -f latest
          git push origin latest --force
