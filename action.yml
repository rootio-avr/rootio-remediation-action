---
name: "Root.io Image Remediation"
description: "Runs the Root.io remediation client to analyze and remediate container images."
author: "Root.io"
branding:
  icon: "shield"
  color: "green"

inputs:
  image_reference:
    description: "The image reference to remediate in the format of 'registry/image:tag'."
    required: false
    default: "ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
  org_id:
    description: "The organization ID of the organization where the image is stored."
    required: true
  api_token:
    description: "The API token used to authenticate with the Root.io API."
    required: true
  registry_credentials_id:
    description: "The ID of the registry credentials used to pull the image."
    required: true
  output_path:
    description: "The path where remediation artifacts will be stored."
    required: false
    default: "${{ github.workspace }}/remediation-output"

runs:
  using: "composite"
  steps:
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Create output directory if it doesn't exist
      shell: bash
      run: |
        mkdir -p ${{ inputs.output_path }}

    - name: Run Remediation Client
      shell: bash
      run: |
        docker run --rm \
          -v ${{ inputs.output_path }}:/output \
          public.ecr.aws/rootio/remediation-client:latest \
          ${{ inputs.org_id }} \
          ${{ inputs.api_token }} \
          ${{ inputs.registry_credentials_id }} \
          ${{ inputs.image_reference }} \
          /output

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: remediation-results
        path: ${{ inputs.output_path }}/*.json
        if-no-files-found: error
